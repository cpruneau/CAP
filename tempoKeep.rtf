{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red108\green121\blue134;\red31\green31\blue36;\red255\green255\blue255;
\red253\green143\blue63;\red252\green106\blue93;\red252\green95\blue163;\red65\green161\blue192;\red208\green191\blue105;
}
{\*\expandedcolortbl;;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81498\c74939\c41233;
}
\margl1440\margr1440\vieww43420\viewh16940\viewkind0
\deftab445
\pard\tx445\pardeftab445\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 /* **********************************************************************\cf4 \
\cf2  * Copyright (C) 2019-2022, Claude Pruneau, Victor Gonzalez, Sumit Basu\cf4 \
\cf2  * All rights reserved.\cf4 \
\cf2  *\cf4 \
\cf2  * Based on the ROOT package and environment\cf4 \
\cf2  *\cf4 \
\cf2  * For the licensing terms see LICENSE.\cf4 \
\cf2  *\cf4 \
\cf2  * Author: Claude Pruneau,   04/01/2022\cf4 \
\cf2  *\cf4 \
\cf2  * *********************************************************************/\cf4 \
\cf5 #include \cf6 <iostream>\cf4 \
\cf5 #include \cf6 <fstream>\cf4 \
\cf5 #include \cf6 <TStyle.h>\cf4 \
\cf5 #include \cf6 <TROOT.h>\cf4 \
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadBase\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPythia\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPerformance\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadAmpt\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadEpos\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadBasicGen\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadGlobal\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadParticle\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPair\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadNuDyn\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadSubSample\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath);\
\
\

\f1\b \cf7 int
\f0\b0 \cf4  \cf8 RunAnalysis\cf4 ()\
\{\
  TString includeBasePath = getenv(\cf6 "CAP_SRC"\cf4 );\
  loadBase(includeBasePath);\
  loadPythia(includeBasePath);\
  loadPerformance(includeBasePath);\
  loadAmpt(includeBasePath);\
  loadEpos(includeBasePath);\
  loadBasicGen(includeBasePath);\
  loadGlobal(includeBasePath);\
  loadParticle(includeBasePath);\
  loadPair(includeBasePath);\
  loadNuDyn(includeBasePath);\
  loadSubSample(includeBasePath);\
\
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
  std::cout << \cf6 "MC Model Analysis"\cf4  << endl;\
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
\
  \
  
\f1\b \cf7 bool
\f0\b0 \cf4  YES = 
\f1\b \cf7 true
\f0\b0 \cf4 ;\
  
\f1\b \cf7 bool
\f0\b0 \cf4  NO  = 
\f1\b \cf7 false
\f0\b0 \cf4 ;\
\
  TString modelLabel;\
  TString systemLabel;\
  TString energyLabel;\
  TString extraLabel;\
\
  TString globalLabel     = \cf6 "G"\cf4 ;\
  TString spherocityLabel = \cf6 "S"\cf4 ;\
  TString partLabel       = \cf6 "Part"\cf4 ;\
  TString pairLabel       = \cf6 "Pair"\cf4 ;\
  TString nuDynLabel      = \cf6 "NuDyn"\cf4 ;\
  TString simAnaLabel     = \cf6 "SimAna"\cf4 ;\
  TString rootExt         = \cf6 ".root"\cf4 ;\
  TString derivedLabel    = \cf6 "_Derived"\cf4 ;\
  TString sumLabel        = \cf6 "_Sum"\cf4 ;\
  TString balFctLabel     = \cf6 "_BalFct"\cf4 ;\
  TString closureLabel    = \cf6 "_Closure"\cf4 ;\
\
  TString histoModelDataName;\
  TString histoAnalyzerName;\
  TString histoBaseName;\
\
  MessageLogger::LogLevel infoLevel  = MessageLogger::Info;\
  MessageLogger::LogLevel debugLevel = MessageLogger::Debug;\
  MessageLogger::LogLevel selectedLevel = infoLevel;\
  \
  
\f1\b \cf7 bool
\f0\b0 \cf4     runEventAnalysis               = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runGenLevelAnalysis            = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runRecoLevelAnalysis           = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runDerivedHistoCalculation     = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runBalFctCalculation           = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runSubsampleAnalysis           = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runBasicSubsampleAnalysis      = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runDerivedSubsampleAnalysis    = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runBalFctSubsampleAnalysis     = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runPerformSimulator            = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runPerformAnalysis             = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runClosureAnalysis             = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runBasicClosureAnalysis        = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runDerivedClosureAnalysis      = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runBalFctClosureAnalysis       = YES;\
\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runPythiaGenerator             = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runHerwigGenerator             = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runAmptReader                  = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runEposGenerator               = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runUrqmdGenerator              = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runHijingGenerator             = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runGausResGenerator            = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runGlobalAnalysis              = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runSpherocityAnalysis          = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runPartAnalysis                = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runPairAnalysis                = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     runNuDynAnalysis               = NO;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     loadPdgTable                   = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     fillEta                        = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     fillY                          = NO;\
\
  
\f1\b \cf7 long
\f0\b0 \cf4     nIterationRequested            = \cf9 10000\cf4 -\cf9 1\cf4 ;\
  
\f1\b \cf7 long
\f0\b0 \cf4     nIterationReported             = \cf9 1000\cf4 ;\
  
\f1\b \cf7 long
\f0\b0 \cf4     nIterationPartialSave          = \cf9 1000\cf4 ;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     doPartialReports               = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     doPartialSaves                 = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     forceHistogramsRewrite         = YES;\
  
\f1\b \cf7 bool
\f0\b0 \cf4     scaleHistograms                = YES;\
  
\f1\b \cf7 double
\f0\b0 \cf4   beamEnergy                     = \cf9 13000.0\cf4 ; \cf2 // GeV\cf4 \
  
\f1\b \cf7 int
\f0\b0 \cf4      beamPdgCode                    = \cf9 2212\cf4 ;    \cf2 // proton\cf4 \
  
\f1\b \cf7 int
\f0\b0 \cf4      targetPdgCode                  = \cf9 2212\cf4 ;\
\
  
\f1\b \cf7 int
\f0\b0 \cf4      globalEventFilterOptions       = \cf9 0\cf4 ;\
  
\f1\b \cf7 int
\f0\b0 \cf4      analysisParticleFilterOption   = \cf9 4\cf4 ;\
  
\f1\b \cf7 int
\f0\b0 \cf4      analysisEventFilterOptions     = \cf9 0\cf4 ;\
\
\
  TString inputPathBase   = \cf6 "/Volumes/ClaudeDisc4/OutputFiles/PythiaNew/"\cf4 ;\
  TString outputPathBase  = \cf6 "/Volumes/ClaudeDisc4/OutputFiles/PythiaNew/"\cf4 ;\
  \cf2 // TString input FileNameBase;\cf4 \
  TString outputFileNameBase;\
  TString inputPathName   = inputPathBase;\
  TString outputPathName  = outputPathBase;\
\
  \cf2 // =========================================\cf4 \
  \cf2 // Setup all event filters\cf4 \
  \cf2 // =========================================\cf4 \
  vector<EventFilter*> generatorEventFilters;\
  vector<EventFilter*> analysisEventFilters;\
\
  EventFilter * openEventFilter  = new EventFilter();\
  openEventFilter->setName(\cf6 "All"\cf4 );\
  openEventFilter->setLongName(\cf6 "All"\cf4 );\
\
  EventFilter * aliceMinBiasEventFilter  = new EventFilter();\
  aliceMinBiasEventFilter->setName(\cf6 "V0MB"\cf4 );\
  aliceMinBiasEventFilter->setLongName(\cf6 "V0MinBias"\cf4 );\
  aliceMinBiasEventFilter->addCondition(\cf9 1\cf4 , \cf9 0\cf4 , \cf9 1.0\cf4 , \cf9 1.0E10\cf4 ); \cf2 // v0 multiplicity\cf4 \
  aliceMinBiasEventFilter->addCondition(\cf9 1\cf4 , \cf9 1\cf4 , \cf9 1.0\cf4 , \cf9 1.0E10\cf4 ); \cf2 // TPC multiplicity\cf4 \
\
  
\f1\b \cf7 switch
\f0\b0 \cf4  (analysisEventFilterOptions)\
    \{\
      
\f1\b \cf7 default
\f0\b0 \cf4 :\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 0\cf4 : analysisEventFilters.push_back( openEventFilter); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 1\cf4 : analysisEventFilters.push_back( aliceMinBiasEventFilter); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 2\cf4 :\
      EventFilter * f;\
      f = new EventFilter();\
      f->setName(\cf6 "V0M1To10"\cf4 );\
      f->setLongName(\cf6 "V0M1To10"\cf4 );\
      f->addCondition(\cf9 1\cf4 , \cf9 0\cf4 , \cf9 1.0\cf4 , \cf9 10.0\cf4 ); \cf2 // v0 multiplicity\cf4 \
      f->addCondition(\cf9 1\cf4 , \cf9 1\cf4 , \cf9 1.0\cf4 , \cf9 1.0E10\cf4 ); \cf2 // TPC multiplicity\cf4 \
      analysisEventFilters.push_back( f );\
      f = new EventFilter();\
      f->setName(\cf6 "V0M11To500"\cf4 );\
      f->setLongName(\cf6 "V0M11To500"\cf4 );\
      f->addCondition(\cf9 1\cf4 , \cf9 0\cf4 , \cf9 11.0\cf4 , \cf9 500.0\cf4 ); \cf2 // v0 multiplicity\cf4 \
      f->addCondition(\cf9 1\cf4 , \cf9 1\cf4 , \cf9 1.0\cf4 , \cf9 1.0E10\cf4 ); \cf2 // TPC multiplicity\cf4 \
      analysisEventFilters.push_back( f );\
    \}\
\
  \cf2 // =========================================\cf4 \
  \cf2 // Setup all particle filters\cf4 \
  \cf2 // =========================================\cf4 \
\
  vector<ParticleFilter*>  generatorParticleFilters;\
  vector<ParticleFilter*>  analysisParticleFilters;\
\
  ParticleFilter* openParticleFilter = new ParticleFilter(); \cf2 // no conditions -- accepts all\cf4 \
  openParticleFilter->setName(\cf6 "All"\cf4 );\
  openParticleFilter->setLongName(\cf6 "All"\cf4 );\
  openParticleFilter->setTitle(\cf6 "All"\cf4 );\
  openParticleFilter->setLongTitle(\cf6 "All"\cf4 );\
  openParticleFilter->addCondition(\cf9 0\cf4 , \cf9 1\cf4 ,  \cf9 0.0\cf4 , \cf9 0.0\cf4 );  \cf2 // live particles only\cf4 \
\
  ParticleFilter* chargedParticleFilter = new ParticleFilter(); \cf2 // no conditions -- accepts all\cf4 \
  chargedParticleFilter->setName(\cf6 "CH"\cf4 );\
  chargedParticleFilter->setLongName(\cf6 "CH"\cf4 );\
  chargedParticleFilter->setTitle(\cf6 "CH"\cf4 );\
  chargedParticleFilter->setLongTitle(\cf6 "CH"\cf4 );\
  chargedParticleFilter->addCondition(\cf9 0\cf4 , \cf9 1\cf4 ,  \cf9 0.0\cf4 , \cf9 0.0\cf4 );  \cf2 // live particles only\cf4 \
  chargedParticleFilter->addCondition(\cf9 4\cf4 , \cf9 1102\cf4 , \cf9 0.0\cf4 , \cf9 0.0\cf4 );   \cf2 // low mass charged hadron\cf4 \
\
  ParticleFilter* aliceV0ParticleFilter  = new ParticleFilter();\
  aliceV0ParticleFilter->setName(\cf6 "V0M"\cf4 );\
  aliceV0ParticleFilter->setLongName(\cf6 "V0M"\cf4 );\
  aliceV0ParticleFilter->setTitle(\cf6 "V0M"\cf4 );\
  aliceV0ParticleFilter->setLongTitle(\cf6 "V0M"\cf4 );\
  aliceV0ParticleFilter->addCondition(\cf9 0\cf4 , \cf9 1\cf4 ,  \cf9 0.0\cf4 , \cf9 0.0\cf4 );  \cf2 // live particles only\cf4 \
  aliceV0ParticleFilter->addCondition(\cf9 4\cf4 , \cf9 1102\cf4 , \cf9 0.0\cf4 , \cf9 0.0\cf4 );   \cf2 // low mass charged hadron\cf4 \
  aliceV0ParticleFilter->addCondition(\cf9 5\cf4 , \cf9 1\cf4 , \cf9 0.05\cf4 ,  \cf9 1000.0\cf4 );  \cf2 // pT\cf4 \
  aliceV0ParticleFilter->addCondition(\cf9 5\cf4 , \cf9 7\cf4 , -\cf9 3.7\cf4 , -\cf9 1.7\cf4 , \cf9 2.8\cf4 , \cf9 5.1\cf4 ); \cf2 // pseudorapidity in V0A and V0C\cf4 \
\
  ParticleFilter* aliceTpcParticleFilter = new ParticleFilter();\
  aliceTpcParticleFilter->setName(\cf6 "TpcAll"\cf4 );\
  aliceTpcParticleFilter->setLongName(\cf6 "TpcAll"\cf4 );\
  aliceTpcParticleFilter->setTitle(\cf6 "TpcAll"\cf4 );\
  aliceTpcParticleFilter->setLongTitle(\cf6 "TpcAll"\cf4 );\
  aliceTpcParticleFilter->addCondition(\cf9 0\cf4 , \cf9 1\cf4 ,  \cf9 0.0\cf4 , \cf9 0.0\cf4 );     \cf2 // live particles only\cf4 \
  aliceTpcParticleFilter->addCondition(\cf9 4\cf4 , \cf9 1102\cf4 , \cf9 0.0\cf4 , \cf9 0.0\cf4 );   \cf2 // low mass charged hadron\cf4 \
  aliceTpcParticleFilter->addCondition(\cf9 5\cf4 , \cf9 1\cf4 , \cf9 0.15\cf4 ,  \cf9 100.0\cf4 );  \cf2 // pT\cf4 \
  aliceTpcParticleFilter->addCondition(\cf9 5\cf4 , \cf9 7\cf4 , -\cf9 0.8\cf4 , \cf9 0.8\cf4 );     \cf2 // pseudorapidity in  TPC\cf4 \
\
  ParticleFilter*  chargedWideParticleFilter = new ParticleFilter();\
  chargedWideParticleFilter->setName(\cf6 "CHW"\cf4 );\
  chargedWideParticleFilter->setLongName(\cf6 "CHW"\cf4 );\
  chargedWideParticleFilter->setTitle(\cf6 "CHW"\cf4 );\
  chargedWideParticleFilter->setLongTitle(\cf6 "CHW"\cf4 );\
  chargedWideParticleFilter->addCondition(\cf9 0\cf4 , \cf9 1\cf4 ,  \cf9 0.0\cf4 , \cf9 0.0\cf4 );  \cf2 // live particles only\cf4 \
  chargedWideParticleFilter->addCondition(\cf9 4\cf4 , \cf9 1102\cf4 , \cf9 0.0\cf4 , \cf9 0.0\cf4 );   \cf2 // low mass charged hadron\cf4 \
  chargedWideParticleFilter->addCondition(\cf9 5\cf4 , \cf9 1\cf4 , \cf9 0.05\cf4 ,  \cf9 1000.0\cf4 );  \cf2 // pT\cf4 \
\
\
  
\f1\b \cf7 switch
\f0\b0 \cf4  (analysisParticleFilterOption)\
    \{\
      
\f1\b \cf7 default
\f0\b0 \cf4 :\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 0\cf4 :  analysisParticleFilters.push_back( openParticleFilter      ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 1\cf4 :  analysisParticleFilters.push_back( aliceV0ParticleFilter   ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 2\cf4 :  analysisParticleFilters.push_back( aliceTpcParticleFilter ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 3\cf4 :  analysisParticleFilters = ParticleFilter::createChargedHadronFilters(YES,\cf9 0.0\cf4 , \cf9 10.0\cf4 , YES,-\cf9 4.0\cf4 , \cf9 4.0\cf4 , NO, \cf9 10.0\cf4 , -\cf9 10.0\cf4 ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 4\cf4 :  analysisParticleFilters = ParticleFilter::createChargedHadronFilters(YES,\cf9 0.2\cf4 , \cf9 2.0\cf4 , YES,-\cf9 4.0\cf4 , \cf9 4.0\cf4 , NO, \cf9 10.0\cf4 , -\cf9 10.0\cf4 ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 5\cf4 :  analysisParticleFilters = ParticleFilter::createPlusMinusHadronFilters(YES,\cf9 0.2\cf4 , \cf9 2.0\cf4 , YES,-\cf9 2.0\cf4 , \cf9 2.0\cf4 , NO, \cf9 10.0\cf4 , -\cf9 10.0\cf4 ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 6\cf4 :  analysisParticleFilters = ParticleFilter::createPlusMinusHadronFilters(YES,\cf9 0.0\cf4 , \cf9 100.0\cf4 , YES,-\cf9 4.0\cf4 , \cf9 4.0\cf4 , NO, \cf9 10.0\cf4 , -\cf9 10.0\cf4 ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 7\cf4 :  analysisParticleFilters = ParticleFilter::createChargedHadronFilters(YES,\cf9 0.2\cf4 , \cf9 1.0\cf4 , YES,-\cf9 4.0\cf4 , \cf9 4.0\cf4 , NO, \cf9 10.0\cf4 , -\cf9 10.0\cf4 ); 
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      \cf2 //case 6:  analysisParticleFilters = ParticleFilter::createBaryonFilters(YES,0.2, 10.0, YES, -1.0, 1.0, NO, 10.0, -10.0); break;\cf4 \
    \}\
\
  \
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
  std::cout << \cf6 "Setup Completed - Proceed with loading analysis"\cf4  << std::endl;\
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
\
  TaskIterator              * eventAnalysis;\
  DerivedHistoIterator      * derivedHistoIterator;\
  BalanceFunctionCalculator * balFctHistoIterator;\
  SubSampleStatIterator     * basicSubsampleIterator;\
  SubSampleStatIterator     * derivedSubsampleIterator;\
  SubSampleStatIterator     * balFctSubsampleIterator;\
  ClosureIterator           * basicClosureIterator;\
  ClosureIterator           * derivedClosureIterator;\
  ClosureIterator           * balFctClosureIterator;\
  Task                      * task;\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (loadPdgTable)\
    \{\
    Configuration pdgDataConfig(\cf6 "ParticleTypeTableLoader Configuration"\cf4 );\
    pdgDataConfig.addParameter(\cf6 "dataInputUsed"\cf4 ,     
\f1\b \cf7 true
\f0\b0 \cf4 );\
    pdgDataConfig.addParameter(\cf6 "dataInputPath"\cf4 ,     TString(getenv(\cf6 "CAP_SRC"\cf4 )));\
    pdgDataConfig.addParameter(\cf6 "dataInputFileName"\cf4 , TString(\cf6 "/EOS/pdgPhysicalKaons.dat"\cf4 ));\
    task= new ParticleTypeTableLoader(\cf6 "ParticleTypeTableLoader"\cf4 ,pdgDataConfig,selectedLevel);\
    task->execute();\
\
    \cf2 //    TString pdgDataTable = getenv("CAP_SRC");\cf4 \
    \cf2 //    pdgDataTable += "/EOS/pdgPhysicalKaons.dat"; // this table has k-short and k-long in addition to k0 and k0-bar\cf4 \
    \cf2 //    ParticleTypeCollection * particles = ParticleTypeCollection::getMasterParticleCollection(); //ParticleTypeCollection::getMasterParticleCollection();\cf4 \
    \cf2 //    particles->readFromFile(pdgDataTable);\cf4 \
    \cf2 //    if (selectedLevel == debugLevel) particles->printProperties(std::cout);\cf4 \
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)\
    \{\
    Configuration eventAnalysisConfig(\cf6 "Event Iterator Configuration"\cf4 );\
    eventAnalysisConfig.addParameter(\cf6 "doPartialReports"\cf4 ,      doPartialReports);\
    eventAnalysisConfig.addParameter(\cf6 "doPartialSaves"\cf4 ,        doPartialSaves);\
    eventAnalysisConfig.addParameter(\cf6 "nIterationRequested"\cf4 ,   nIterationRequested);\
    eventAnalysisConfig.addParameter(\cf6 "nIterationReported"\cf4 ,    nIterationReported);\
    eventAnalysisConfig.addParameter(\cf6 "nIterationPartialSave"\cf4 , nIterationPartialSave);\
    eventAnalysisConfig.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,   runSubsampleAnalysis);\
    eventAnalysisConfig.addParameter(\cf6 "useParticles"\cf4 ,          YES);\
    eventAnalysisConfig.addParameter(\cf6 "useEventStream0"\cf4 ,       YES);\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runPerformSimulator) eventAnalysisConfig.addParameter(\cf6 "useEventStream1"\cf4 ,  YES);\
    eventAnalysis = new TaskIterator(\cf6 "MultiTaskIterator"\cf4 ,eventAnalysisConfig,debugLevel);\
\
\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runPythiaGenerator)\
      \{\
      histoModelDataName  = \cf6 "PYTHIA"\cf4 ;\
      TString pythiaLabel = \cf6 "PYTHIA"\cf4 ;\
      TString systemLabel = \cf6 ""\cf4 ;\
      TString energyLabel = \cf6 ""\cf4 ;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (beamPdgCode    == \cf9 2212\cf4 ) systemLabel += \cf6 "P"\cf4 ;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (targetPdgCode  == \cf9 2212\cf4 ) systemLabel += \cf6 "P"\cf4 ;\
      energyLabel += 
\f1\b \cf7 int
\f0\b0 \cf4 (beamEnergy);\
\
      inputPathName  += pythiaLabel;\
      inputPathName  += \cf6 "/"\cf4 ;\
      inputPathName  += systemLabel;\
      inputPathName  += \cf6 "/"\cf4 ;\
      inputPathName  += energyLabel;\
      inputPathName  += \cf6 "/"\cf4 ;\
      \cf2 //input FileNameBase  = "PYTHIA_";\cf4 \
\
      outputPathName  += pythiaLabel;\
      outputPathName  += \cf6 "/"\cf4 ;\
      outputPathName  += systemLabel;\
      outputPathName  += \cf6 "/"\cf4 ;\
      outputPathName  += energyLabel;\
      outputPathName  += \cf6 "/"\cf4 ;\
      \cf2 //outputFileNameBase = "PYTHIA_";\cf4 \
\
\
      Configuration pythiaConfig(\cf6 "Pythia Configuration"\cf4 );\
      pythiaConfig.addParameter(\cf6 "beam"\cf4 ,    beamPdgCode);  \cf2 // PDG Code   proton is 2212\cf4 \
      pythiaConfig.addParameter(\cf6 "target"\cf4 ,  targetPdgCode);\
      pythiaConfig.addParameter(\cf6 "energy"\cf4 ,  beamEnergy);\
      pythiaConfig.addParameter(\cf6 "useEventStream0"\cf4 ,    YES);\
      pythiaConfig.addParameter(\cf6 "standaloneMode"\cf4 ,     YES);   \cf2 // use interactions generated by the geometry generator\cf4 \
      pythiaConfig.addParameter(\cf6 "dataOutputUsed"\cf4 ,      NO);\
      pythiaConfig.addParameter(\cf6 "dataConversionToWac"\cf4 ,YES);\
      pythiaConfig.addParameter(\cf6 "dataInputUsed"\cf4 ,    NO);\
      pythiaConfig.addParameter(\cf6 "saveHistograms"\cf4 ,   NO);\
      pythiaConfig.addParameter(\cf6 "option0"\cf4 ,  TString(\cf6 "Init:showChangedSettings = off"\cf4 ) );      \cf2 // list changed settings\cf4 \
      pythiaConfig.addParameter(\cf6 "option1"\cf4 ,  TString(\cf6 "Init:showChangedParticleData = off"\cf4 ) ); \cf2 // list changed particle data\cf4 \
      pythiaConfig.addParameter(\cf6 "option2"\cf4 ,  TString(\cf6 "Next:numberCount = 10000"\cf4 ) );            \cf2 // print message every n events\cf4 \
      pythiaConfig.addParameter(\cf6 "option3"\cf4 ,  TString(\cf6 "Next:numberShowInfo = 0"\cf4 ) );            \cf2 // print event information n times\cf4 \
      pythiaConfig.addParameter(\cf6 "option4"\cf4 ,  TString(\cf6 "Next:numberShowProcess = 0"\cf4 ) );         \cf2 // print process record n times\cf4 \
      pythiaConfig.addParameter(\cf6 "option5"\cf4 ,  TString(\cf6 "Next:numberShowEvent = 0"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option6"\cf4 ,  TString(\cf6 "SoftQCD:inelastic = on"\cf4 ) );             \cf2 // All inelastic processes\cf4 \
      pythiaConfig.addParameter(\cf6 "option7"\cf4 ,  TString(\cf6 "ColourReconnection:reconnect = on"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option8"\cf4 ,  TString(\cf6 "130:mayDecay = no"\cf4 ) ); \cf2 //K0s decay off\cf4 \
      pythiaConfig.addParameter(\cf6 "option9"\cf4 ,  TString(\cf6 "310:mayDecay = no"\cf4 ) ); \cf2 //K0s decay off\cf4 \
      pythiaConfig.addParameter(\cf6 "option10"\cf4 , TString(\cf6 "311:mayDecay = no"\cf4 ) ); \cf2 //K0  decay off\cf4 \
      pythiaConfig.addParameter(\cf6 "option11"\cf4 , TString(\cf6 "3112:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option12"\cf4 , TString(\cf6 "3122:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option13"\cf4 , TString(\cf6 "3222:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option14"\cf4 , TString(\cf6 "3212:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option15"\cf4 , TString(\cf6 "3322:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option16"\cf4 , TString(\cf6 "3312:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option17"\cf4 , TString(\cf6 "3334:mayDecay = no"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option18"\cf4 , TString(\cf6 "ParticleDecays:limitTau0 = on"\cf4 ) );\
      pythiaConfig.addParameter(\cf6 "option19"\cf4 , TString(\cf6 "ParticleDecays:tau0Max = 1"\cf4    ) );   \cf2 // particles decay is c*tau less than 1 mm\cf4 \
      \cf2 //if (selectedLevel == debugLevel) pythiaConfig.printConfiguration(cout);\cf4 \
      vector<EventFilter*> pythiaEventFilters;\
      pythiaEventFilters.push_back( openEventFilter);\
      vector<ParticleFilter*> pythiaParticleFilters;\
      pythiaParticleFilters.push_back( openParticleFilter );\
      task  = new PythiaEventGenerator(\cf6 "PythiaEventGenerator"\cf4 ,pythiaConfig,pythiaEventFilters,pythiaParticleFilters,selectedLevel);\
      eventAnalysis->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runHerwigGenerator)\
      \{\
      histoModelDataName  = \cf6 "Herwig"\cf4 ;\
      std::cout << \cf6 "Option runHerwigGenerator not currently available"\cf4   << std::endl;\
      
\f1\b \cf7 return
\f0\b0 \cf4  \cf9 1\cf4 ;\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runAmptReader )\
      \{\
      histoModelDataName  = \cf6 "AMPT"\cf4 ;\
      Configuration amptConfig(\cf6 "Ampt Reader Configuration"\cf4 );\
      amptConfig.addParameter(\cf6 "useEventStream0"\cf4 ,    YES);\
      amptConfig.addParameter(\cf6 "standaloneMode"\cf4 ,     YES);   \cf2 // use interactions generated by the geometry generator\cf4 \
      amptConfig.addParameter(\cf6 "dataOutputUsed"\cf4 ,      NO);\
      amptConfig.addParameter(\cf6 "dataConversionToWac"\cf4 ,YES);\
      amptConfig.addParameter(\cf6 "dataInputUsed"\cf4 ,      YES);\
      amptConfig.addParameter(\cf6 "dataInputPath"\cf4 ,       inputPathName);\
      amptConfig.addParameter(\cf6 "dataInputTreeName"\cf4 ,   TString(\cf6 "tree"\cf4 ) );\
      amptConfig.addParameter(\cf6 "dataInputFileMinIndex"\cf4 , \cf9 0\cf4 );\
      amptConfig.addParameter(\cf6 "dataInputFileMaxIndex"\cf4 , -\cf9 1\cf4 );\
      vector<EventFilter*> amptEventFilters;\
      amptEventFilters.push_back( openEventFilter);\
      vector<ParticleFilter*> amptParticleFilters;\
      amptParticleFilters.push_back( chargedWideParticleFilter );\
      task = new AmptEventReader(\cf6 "AmptEventReader"\cf4 ,amptConfig,amptEventFilters,amptParticleFilters,selectedLevel);\
      eventAnalysis->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runEposGenerator)\
      \{\
      histoModelDataName  = \cf6 "EPOS"\cf4 ;\
      std::cout << \cf6 "Option runEposGenerator not currently available"\cf4   << std::endl;\
      
\f1\b \cf7 return
\f0\b0 \cf4  \cf9 1\cf4 ;\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runUrqmdGenerator)\
      \{\
      histoModelDataName  = \cf6 "URQMD"\cf4 ;\
      std::cout << \cf6 "Option runUrqmdGenerator not currently available"\cf4   << std::endl;\
      
\f1\b \cf7 return
\f0\b0 \cf4  \cf9 1\cf4 ;\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runHijingGenerator)\
      \{\
      histoModelDataName  = \cf6 "HIJING"\cf4 ;\
      std::cout << \cf6 "Option runHijingGenerator not currently available"\cf4   << std::endl;\
      
\f1\b \cf7 return
\f0\b0 \cf4  \cf9 1\cf4 ;\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGausResGenerator)\
      \{\
      histoModelDataName  = \cf6 "RhoDecay"\cf4 ;\
      TString gausResLabel = \cf6 "RhoDecay"\cf4 ;\
      inputPathName  += gausResLabel;\
      inputPathName  += \cf6 "/"\cf4 ;\
      outputPathName += gausResLabel;\
      outputPathName += \cf6 "/"\cf4 ;\
      Configuration resConfig(\cf6 "Resonance Generator Configuration"\cf4 );\
      resConfig.addParameter(\cf6 "useEventStream0"\cf4 ,      YES);\
      resConfig.addParameter(\cf6 "standaloneMode"\cf4 ,       YES);\
      resConfig.addParameter(\cf6 "nParticlesMinimum"\cf4 ,     \cf9 2\cf4 );\
      resConfig.addParameter(\cf6 "nParticlesMaximum"\cf4 ,     \cf9 50\cf4 );\
      resConfig.addParameter(\cf6 "yMinimum"\cf4 ,            -\cf9 0.5\cf4 );\
      resConfig.addParameter(\cf6 "yMaximum"\cf4 ,             \cf9 0.5\cf4 );\
      resConfig.addParameter(\cf6 "pTslope"\cf4 ,              \cf9 1.0\cf4 );\
      resConfig.addParameter(\cf6 "mass"\cf4 ,                \cf9 0.800\cf4 );\
      vector<EventFilter*> eventFiltersR;\
      eventFiltersR.push_back( openEventFilter);\
      vector<ParticleFilter*>  particleFiltersR;\
      particleFiltersR.push_back( openParticleFilter );\
      task  = new ResonanceGenerator(  \cf6 "ResonanceGenerator"\cf4 ,resConfig,    eventFiltersR,  particleFiltersR,  selectedLevel);\
      eventAnalysis->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runPerformSimulator)\
      \{\
      Configuration performConfig(\cf6 "Performance Simulator Configuration"\cf4 );\
      performConfig.addParameter(\cf6 "createHistograms"\cf4 ,  NO);\
      performConfig.addParameter(\cf6 "saveHistograms"\cf4 ,    NO);\
      performConfig.setParameter(\cf6 "loadHistograms"\cf4 ,    NO);\
      performConfig.addParameter(\cf6 "allEventsUseSameFilters"\cf4 , YES);\
      performConfig.addParameter(\cf6 "useParticles"\cf4 ,      YES);\
      performConfig.addParameter(\cf6 "useEventStream0"\cf4 ,   YES);\
      performConfig.addParameter(\cf6 "useEventStream1"\cf4 ,   YES);\
\
      performConfig.addParameter(\cf6 "useSameSetForAll"\cf4 ,  YES);\
      performConfig.addParameter(\cf6 "resolutionOption"\cf4 ,  \cf9 1\cf4 );\
      performConfig.addParameter(\cf6 "efficiencyOption"\cf4 ,  \cf9 1\cf4 );\
      TString baseName = \cf6 "Filter0"\cf4 ;\
      performConfig.addParameter(baseName+\cf6 "_PtBiasAinv"\cf4 ,\cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtBiasA0"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtBiasA1"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtBiasA2"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtRmsAinv"\cf4 , \cf9 0.0005\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtRmsA0"\cf4 ,   \cf9 0.00\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtRmsA1"\cf4 ,   \cf9 0.00\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PtRmsA2"\cf4 ,   \cf9 0.005\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaBiasA0"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaBiasA1"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaBiasA2"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaRmsAinv"\cf4 , \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaRmsA0"\cf4 ,   \cf9 0.01\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaRmsA1"\cf4 ,   \cf9 0.01\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EtaRmsA2"\cf4 ,   \cf9 0.0\cf4 );\
\
      performConfig.addParameter(baseName+\cf6 "_PhiBiasA0"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiBiasA1"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiBiasA2"\cf4 ,  \cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiRmsAinv"\cf4 , \cf9 0.01\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiRmsA0"\cf4 ,   \cf9 0.034\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiRmsA1"\cf4 ,   \cf9 0.035\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_PhiRmsA2"\cf4 ,   \cf9 0.0\cf4 );\
\
      performConfig.addParameter(baseName+\cf6 "_EffPeakAmp"\cf4 ,\cf9 0.8\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EffPeakPt"\cf4 ,\cf9 1.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EffPeakRms"\cf4 ,\cf9 0.5\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EffA1"\cf4 ,\cf9 0.0\cf4 );\
      performConfig.addParameter(baseName+\cf6 "_EffA2"\cf4 ,\cf9 0.0\cf4 );\
\
      vector<EventFilter*>     performEventFilters;\
      vector<ParticleFilter*>  performParticleFilters ;\
      performEventFilters.push_back( openEventFilter);\
      performParticleFilters.push_back( openParticleFilter  );\
      eventAnalysis->addSubTask( new MeasurementPerformanceSimulator(\cf6 "Sim"\cf4 ,performConfig,performEventFilters,performParticleFilters,debugLevel) );\
      \}\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)\
    \{\
    Configuration derivedHistoConfig(\cf6 "DerivedHistoCalculator Configuration"\cf4 );\
    derivedHistoConfig.addParameter(\cf6 "histoInputPath"\cf4 ,        outputPathName);\
    derivedHistoConfig.addParameter(\cf6 "histoOutputPath"\cf4 ,       outputPathName);\
    derivedHistoConfig.addParameter(\cf6 "histoModelDataName"\cf4 ,    histoModelDataName);\
    derivedHistoConfig.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,forceHistogramsRewrite);\
    derivedHistoConfig.addParameter(\cf6 "IncludedPattern0"\cf4 ,rootExt);\
    derivedHistoConfig.addParameter(\cf6 "ExcludedPattern0"\cf4 ,derivedLabel);\
    derivedHistoConfig.addParameter(\cf6 "ExcludedPattern1"\cf4 ,sumLabel);\
    derivedHistoConfig.addParameter(\cf6 "ExcludedPattern2"\cf4 ,balFctLabel);\
    derivedHistoConfig.addParameter(\cf6 "appendedString"\cf4 ,  derivedLabel);\
    derivedHistoIterator = new DerivedHistoIterator(\cf6 "DerivedHistoIterator"\cf4 ,derivedHistoConfig,selectedLevel);\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)\
    \{\
    TString s(\cf6 "Sum_"\cf4 );\
    Configuration config(\cf6 "Event Iterator Configuration"\cf4 );\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,forceHistogramsRewrite);\
    config.addParameter(\cf6 "appendedString"\cf4 ,        sumLabel);\
    config.addParameter(\cf6 "IncludedPattern0"\cf4 ,      histoModelDataName);\
    config.addParameter(\cf6 "ExcludedPattern0"\cf4 ,      sumLabel);\
    config.addParameter(\cf6 "ExcludedPattern1"\cf4 ,      derivedLabel);\
    config.addParameter(\cf6 "ExcludedPattern2"\cf4 ,      balFctLabel);\
    config.addParameter(\cf6 "histoInputPath"\cf4 ,        outputPathName);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,       outputPathName);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,    histoModelDataName);\
    basicSubsampleIterator = new SubSampleStatIterator(\cf6 "SubsampleBasicHistos"\cf4 ,config,selectedLevel);\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis)\
    \{\
    Configuration config(\cf6 "Event Iterator Configuration"\cf4 );\
    config.addParameter( \cf6 "forceHistogramsRewrite"\cf4 ,forceHistogramsRewrite);\
    config.addParameter( \cf6 "appendedString"\cf4 ,        derivedLabel+sumLabel);\
    config.addParameter( \cf6 "IncludedPattern0"\cf4 ,      histoModelDataName);\
    config.addParameter( \cf6 "IncludedPattern1"\cf4 ,      derivedLabel);\
    config.addParameter( \cf6 "ExcludedPattern0"\cf4 ,      balFctLabel);\
    config.addParameter( \cf6 "histoInputPath"\cf4 ,        outputPathName);\
    config.addParameter( \cf6 "histoOutputPath"\cf4 ,       outputPathName);\
    config.addParameter( \cf6 "histoModelDataName"\cf4 ,    histoModelDataName);\
    derivedSubsampleIterator = new SubSampleStatIterator(\cf6 "SubsampleBasicHistos"\cf4 ,config,selectedLevel);\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runBalFctSubsampleAnalysis)\
    \{\
    cout << \cf6 "runBalFctSubsampleAnalysis"\cf4  << endl;\
    Configuration config(\cf6 "BalFct Calculation Configuration"\cf4 );\
    config.addParameter( \cf6 "forceHistogramsRewrite"\cf4 ,forceHistogramsRewrite);\
    config.addParameter( \cf6 "appendedString"\cf4 ,        derivedLabel+balFctLabel+sumLabel);\
    config.addParameter( \cf6 "IncludedPattern0"\cf4 ,      histoModelDataName);\
    config.addParameter( \cf6 "IncludedPattern1"\cf4 ,      derivedLabel);\
    config.addParameter( \cf6 "IncludedPattern2"\cf4 ,      balFctLabel);\
    config.addParameter( \cf6 "histoInputPath"\cf4 ,        outputPathName);\
    config.addParameter( \cf6 "histoOutputPath"\cf4 ,       outputPathName);\
    config.addParameter( \cf6 "histoModelDataName"\cf4 ,    histoModelDataName);\
    balFctSubsampleIterator = new SubSampleStatIterator(\cf6 "balFctSubsampleIterator"\cf4 ,config,selectedLevel);\
    \}\
\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)\
    \{\
    cout << \cf6 "runClosureAnalysis"\cf4  << endl;\
    Configuration config(\cf6 "Basic Closure Analysis Configuration"\cf4 );\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "selectedMethod"\cf4 ,          \cf9 1\cf4 );\
    config.addParameter(\cf6 "histoInputPath"\cf4 ,          outputPathName);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "ExcludedPattern0"\cf4 ,        derivedLabel);\
    config.addParameter(\cf6 "ExcludedPattern1"\cf4 ,        balFctLabel);\
    config.addParameter(\cf6 "ExcludedPattern2"\cf4 ,        closureLabel);\
    basicClosureIterator = new ClosureIterator(\cf6 "BasicClosureAnalysis"\cf4 , config,infoLevel);\
    \}\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)\
    \{\
    cout << \cf6 "runDerivedHistoCalculation"\cf4  << endl;\
    Configuration config(\cf6 "Derived Closure Analysis Configuration"\cf4 );\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "selectedMethod"\cf4 ,          \cf9 1\cf4 );\
    config.addParameter(\cf6 "histoInputPath"\cf4 ,          outputPathName);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "IncludedPattern0"\cf4 ,        derivedLabel);\
    config.addParameter(\cf6 "ExcludedPattern0"\cf4 ,        balFctLabel);\
    config.addParameter(\cf6 "ExcludedPattern1"\cf4 ,        closureLabel);\
    derivedClosureIterator = new ClosureIterator(\cf6 "DerivedClosureAnalysis"\cf4 , config,infoLevel);\
    \}\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)\
    \{\
    cout << \cf6 "runDerivedHistoCalculation"\cf4  << endl;\
    Configuration config(\cf6 "Derived Closure Analysis Configuration"\cf4 );\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "selectedMethod"\cf4 ,          \cf9 1\cf4 );\
    config.addParameter(\cf6 "histoInputPath"\cf4 ,          outputPathName);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "IncludedPattern0"\cf4 ,        derivedLabel);\
    config.addParameter(\cf6 "ExcludedPattern0"\cf4 ,        balFctLabel);\
    config.addParameter(\cf6 "ExcludedPattern1"\cf4 ,        closureLabel);\
    balFctClosureIterator = new ClosureIterator(\cf6 "BalFctClosureAnalysis"\cf4 , config,infoLevel);\
    \}\
\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runPerformAnalysis)\
    \{\
    Configuration performAnaConfig(\cf6 "Performance Analyzer Configuration"\cf4 );\
    performAnaConfig.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    performAnaConfig.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,    runSubsampleAnalysis);\
    performAnaConfig.addParameter(\cf6 "doPartialSaves"\cf4 ,          doPartialSaves);\
    performAnaConfig.addParameter(\cf6 "scaleHistograms"\cf4 ,         scaleHistograms);\
    performAnaConfig.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    performAnaConfig.addParameter(\cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    performAnaConfig.addParameter(\cf6 "histoAnalyzerName"\cf4 ,       simAnaLabel);\
    performAnaConfig.addParameter(\cf6 "histoBaseName"\cf4 ,           simAnaLabel);\
    performAnaConfig.addParameter(\cf6 "fillEta"\cf4 ,                 fillEta);\
    performAnaConfig.addParameter(\cf6 "fillY"\cf4 ,                   fillY);\
    vector<EventFilter*>     performAnaEventFilters;\
    vector<ParticleFilter*>  performAnaParticleFilters ;\
    performAnaEventFilters.push_back( openEventFilter);\
    performAnaParticleFilters.push_back( openParticleFilter  );\
    task = new ParticlePerformanceAnalyzer(simAnaLabel,performAnaConfig,performAnaEventFilters,performAnaParticleFilters,selectedLevel);\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)    eventAnalysis->addSubTask(task);\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis) basicSubsampleIterator->addSubTask(task);\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation) derivedHistoIterator->addSubTask(task);\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runGlobalAnalysis)\
    \{\
    Configuration config(\cf6 "Global Configuration"\cf4 );\
    config.addParameter(\cf6 "useEventStream0"\cf4 ,         YES);\
    config.addParameter(\cf6 "useEventStream1"\cf4 ,         NO);\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,    runSubsampleAnalysis);\
    config.addParameter(\cf6 "doPartialSaves"\cf4 ,          doPartialSaves);\
    config.addParameter(\cf6 "scaleHistograms"\cf4 ,         scaleHistograms);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    config.addParameter(\cf6 "histoAnalyzerName"\cf4 ,       globalLabel);\
    config.addParameter(\cf6 "histoBaseName"\cf4 ,           globalLabel);\
    config.addParameter(\cf6 "fillCorrelationHistos"\cf4 ,   NO);\
    config.addParameter(\cf6 "fill2D"\cf4 ,                  YES);\
    config.addParameter(\cf6 "nBins_n"\cf4 ,        \cf9 100\cf4 );\
    config.addParameter(\cf6 "nBins_n2"\cf4 ,       \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_n"\cf4 ,         -\cf9 0.5\cf4 );\
    config.addParameter(\cf6 "max_n"\cf4 ,         \cf9 99.5\cf4 );\
    config.addParameter(\cf6 "nBins_e"\cf4 ,        \cf9 200\cf4 );\
    config.addParameter(\cf6 "nBins_e2"\cf4 ,        \cf9 20\cf4 );\
    config.addParameter(\cf6 "min_e"\cf4 ,          \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_e"\cf4 ,       \cf9 1000.0\cf4 );\
    config.addParameter(\cf6 "nBins_q"\cf4 ,        \cf9 201\cf4 );\
    config.addParameter(\cf6 "nBins_q2"\cf4 ,        \cf9 20\cf4 );\
    config.addParameter(\cf6 "min_q"\cf4 ,       -\cf9 100.5\cf4 );\
    config.addParameter(\cf6 "max_q"\cf4 ,        \cf9 100.5\cf4 );\
    config.addParameter(\cf6 "nBins_b"\cf4 ,        \cf9 41\cf4 );\
    config.addParameter(\cf6 "nBins_b2"\cf4 ,       \cf9 41\cf4 );\
    config.addParameter(\cf6 "min_b"\cf4 ,        -\cf9 20.5\cf4 );\
    config.addParameter(\cf6 "max_b"\cf4 ,         \cf9 20.5\cf4 );\
    config.addParameter(\cf6 "nBins_ptSum"\cf4 ,  \cf9 100\cf4 );\
    config.addParameter(\cf6 "nBins_ptSum2"\cf4 , \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_ptSum"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_ptSum"\cf4 ,  \cf9 100.0\cf4 );\
    config.addParameter(\cf6 "nBins_ptAvg"\cf4 ,  \cf9 100\cf4 );\
    config.addParameter(\cf6 "nBins_ptAvg2"\cf4 , \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_ptAvg"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_ptAvg"\cf4 ,    \cf9 4.0\cf4 );\
\
    vector<EventFilter*>     globalEventFilters;\
    vector<ParticleFilter*>  globalParticleFilters ;\
    
\f1\b \cf7 switch
\f0\b0 \cf4  (globalEventFilterOptions)\
      \{\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 0\cf4 : \cf2 // totally open filters\cf4 \
        globalEventFilters.push_back( openEventFilter);\
        globalParticleFilters.push_back( openParticleFilter  );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 1\cf4 : \cf2 // setups an ALICE minbias filter\cf4 \
        globalEventFilters.push_back( openEventFilter);\
        globalParticleFilters.push_back( aliceV0ParticleFilter   );\
        globalParticleFilters.push_back( aliceTpcParticleFilter  );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      \}\
\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGenLevelAnalysis)\
      \{\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 0"\cf4  << endl;\
      task = new GlobalAnalyzer(globalLabel,config,globalEventFilters,globalParticleFilters,selectedLevel);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 1"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 2"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 3"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 4"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 5"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)     basicClosureIterator->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 6"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)   derivedClosureIterator->addSubTask(task);\
      cout << \cf6 "runGlobalAnalysis, runGenLevelAnalysis 7"\cf4  << endl;\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)    balFctClosureIterator->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runRecoLevelAnalysis)\
      \{\
      Configuration configR(config);\
      configR.addParameter(\cf6 "useEventStream0"\cf4 ,   NO);\
      configR.addParameter(\cf6 "useEventStream1"\cf4 ,   YES);\
      configR.addParameter(\cf6 "histoAnalyzerName"\cf4 , globalLabel+\cf6 "R"\cf4 );\
      configR.addParameter(\cf6 "histoBaseName"\cf4 ,     globalLabel+\cf6 "R"\cf4 );\
      task = new GlobalAnalyzer(globalLabel+\cf6 "R"\cf4 ,config,globalEventFilters,globalParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      \}\
\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runSpherocityAnalysis)\
    \{\
    Configuration config(\cf6 "Global Configuration"\cf4 );\
    config.addParameter(\cf6 "useEventStream0"\cf4 ,        YES);\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 , forceHistogramsRewrite);\
    config.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,   runSubsampleAnalysis);\
    config.addParameter(\cf6 "doPartialSaves"\cf4 ,         doPartialSaves);\
    config.addParameter(\cf6 "scaleHistograms"\cf4 ,        scaleHistograms);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,        outputPathName);\
    config.addParameter(\cf6 "histoOutputFileName"\cf4 ,    outputFileNameBase+spherocityLabel);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,     histoModelDataName);\
    config.addParameter(\cf6 "histoAnalyzerName"\cf4 ,      spherocityLabel);\
    config.addParameter(\cf6 "histoBaseName"\cf4 ,          spherocityLabel);\
    config.addParameter(\cf6 "setEvent"\cf4 ,               NO);\
    config.addParameter(\cf6 "fillCorrelationHistos"\cf4 ,  YES);\
    config.addParameter(\cf6 "nSteps"\cf4 ,                 \cf9 360\cf4 );\
    config.addParameter(\cf6 "fillS0"\cf4 ,                 YES);\
    config.addParameter(\cf6 "fillS1"\cf4 ,                 NO);\
    config.addParameter(\cf6 "fillS1VsS0"\cf4 ,             NO);\
    config.addParameter(\cf6 "nBins_spherocity"\cf4 ,       \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_spherocity"\cf4 ,         \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_spherocity"\cf4 ,         \cf9 1.0\cf4 );\
    vector<EventFilter*>     spherocityEventFilters;\
    vector<ParticleFilter*>  spherocityParticleFilters ;\
    
\f1\b \cf7 switch
\f0\b0 \cf4  (globalEventFilterOptions)\
      \{\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 0\cf4 : \cf2 // totally open filters\cf4 \
        spherocityEventFilters.push_back( openEventFilter);\
        spherocityParticleFilters.push_back( openParticleFilter  );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 1\cf4 : \cf2 // setups an ALICE minbias filter\cf4 \
        spherocityEventFilters.push_back(    aliceMinBiasEventFilter );\
        spherocityParticleFilters.push_back( aliceTpcParticleFilter  );\
        spherocityParticleFilters.push_back( aliceV0ParticleFilter   );\
        spherocityParticleFilters.push_back( openParticleFilter  );\
        spherocityParticleFilters.push_back( chargedParticleFilter );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGenLevelAnalysis)\
      \{\
      task = new TransverseSpherocityAnalyzer(spherocityLabel,config,spherocityEventFilters,spherocityParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)     basicClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)   derivedClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)    balFctClosureIterator->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runRecoLevelAnalysis)\
      \{\
      Configuration configR(config);\
      configR.addParameter(\cf6 "useEventStream0"\cf4 ,   NO);\
      configR.addParameter(\cf6 "useEventStream1"\cf4 ,   YES);\
      configR.addParameter(\cf6 "histoAnalyzerName"\cf4 , spherocityLabel);\
      configR.addParameter(\cf6 "histoBaseName"\cf4 ,     spherocityLabel);\
      task = new TransverseSpherocityAnalyzer(spherocityLabel+\cf6 "R"\cf4 ,config,spherocityEventFilters,spherocityParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      \}\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runPartAnalysis)\
    \{\
    Configuration config(\cf6 "Part Spectra Configuration"\cf4 );\
    config.addParameter(\cf6 "useEventStream0"\cf4 ,         YES);\
    config.addParameter(\cf6 "useEventStream1"\cf4 ,         NO);\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,     runSubsampleAnalysis);\
    config.addParameter(\cf6 "doPartialSaves"\cf4 ,          doPartialSaves);\
    config.addParameter(\cf6 "scaleHistograms"\cf4 ,         scaleHistograms);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    config.addParameter(\cf6 "histoAnalyzerName"\cf4 ,       partLabel);\
    config.addParameter(\cf6 "histoBaseName"\cf4 ,           partLabel);\
    config.addParameter(\cf6 "nBins_n1"\cf4 ,  \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_n1"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_n1"\cf4 ,  \cf9 100.0\cf4 );\
    config.addParameter(\cf6 "nBins_eTot"\cf4 ,  \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_eTot"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_eTot"\cf4 ,  \cf9 100.0\cf4 );\
    config.addParameter(\cf6 "nBins_pt"\cf4 ,  \cf9 1000\cf4 );\
    config.addParameter(\cf6 "min_pt"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_pt"\cf4 ,  \cf9 100.0\cf4 );\
    config.addParameter(\cf6 "nBins_eta"\cf4 ,  \cf9 80\cf4 );\
    config.addParameter(\cf6 "min_eta"\cf4 ,   -\cf9 4.0\cf4 );\
    config.addParameter(\cf6 "max_eta"\cf4 ,    \cf9 4.0\cf4 );\
    config.addParameter(\cf6 "nBins_phi"\cf4 ,  \cf9 72\cf4 );\
    config.addParameter(\cf6 "min_phi"\cf4 ,    \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_phi"\cf4 ,    TMath::TwoPi());\
    config.addParameter(\cf6 "fillEta"\cf4 ,    fillEta);\
    config.addParameter(\cf6 "fillY"\cf4 ,      fillY);\
    config.addParameter(\cf6 "fillP2"\cf4 ,     NO);\
\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGenLevelAnalysis)\
      \{\
      task = new ParticleAnalyzer(partLabel,config,analysisEventFilters,analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)     basicClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)   derivedClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)    balFctClosureIterator->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runRecoLevelAnalysis)\
      \{\
      Configuration configR(config);\
      configR.addParameter(\cf6 "useEventStream0"\cf4 ,   NO);\
      configR.addParameter(\cf6 "useEventStream1"\cf4 ,   YES);\
      configR.addParameter(\cf6 "histoAnalyzerName"\cf4 , partLabel+\cf6 "R"\cf4 );\
      configR.addParameter(\cf6 "histoBaseName"\cf4 ,     partLabel+\cf6 "R"\cf4 );\
      task = new ParticleAnalyzer(partLabel+\cf6 "R"\cf4 ,configR,analysisEventFilters,analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      \}\
    \}\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runPairAnalysis)\
    \{\
    Configuration config(\cf6 "Pair Correlation Configuration"\cf4 );\
    config.addParameter(\cf6 "useEventStream0"\cf4 ,         YES);\
    config.addParameter(\cf6 "useEventStream1"\cf4 ,         NO);\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,     runSubsampleAnalysis);\
    config.addParameter(\cf6 "doPartialSaves"\cf4 ,          doPartialSaves);\
    config.addParameter(\cf6 "scaleHistograms"\cf4 ,         scaleHistograms);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    config.addParameter(\cf6 "histoAnalyzerName"\cf4 ,       pairLabel);\
    config.addParameter(\cf6 "histoBaseName"\cf4 ,           pairLabel);\
    config.addParameter(\cf6 "nBins_n1"\cf4 ,       \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_n1"\cf4 ,         \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_n1"\cf4 ,       \cf9 100.0\cf4 );\
    config.addParameter(\cf6 "nBins_n2"\cf4 ,       \cf9 100\cf4 );\
    config.addParameter(\cf6 "min_n2"\cf4 ,         \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_n2"\cf4 ,       \cf9 400.0\cf4 );\
    config.addParameter(\cf6 "nBins_pt"\cf4 ,        \cf9 40\cf4 );\
    config.addParameter(\cf6 "min_pt"\cf4 ,        \cf9 0.00\cf4 );\
    config.addParameter(\cf6 "max_pt"\cf4 ,        \cf9 20.0\cf4 );\
    config.addParameter(\cf6 "nBins_eta"\cf4 ,       \cf9 40\cf4 );\
    config.addParameter(\cf6 "min_eta"\cf4 ,       -\cf9 2.0\cf4 ); \cf2 // 1;\cf4 \
    config.addParameter(\cf6 "max_eta"\cf4 ,        \cf9 2.0\cf4 );  \cf2 // 1;\cf4 \
    config.addParameter(\cf6 "nBins_phi"\cf4 ,       \cf9 72\cf4 );\
    config.addParameter(\cf6 "min_phi"\cf4 ,        \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_phi"\cf4 ,      TMath::TwoPi());\
    config.addParameter(\cf6 "fillEta"\cf4 ,      fillEta);\
    config.addParameter(\cf6 "fillY"\cf4 ,        fillY);\
    config.addParameter(\cf6 "fillP2"\cf4 ,       NO);\
\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGenLevelAnalysis)\
      \{\
      task = new ParticlePairAnalyzer(pairLabel, config,analysisEventFilters, analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)     basicClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)   derivedClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)    balFctClosureIterator->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runRecoLevelAnalysis)\
      \{\
      Configuration configR(config);\
      configR.addParameter(\cf6 "useEventStream0"\cf4 ,   NO);\
      configR.addParameter(\cf6 "useEventStream1"\cf4 ,   YES);\
      configR.addParameter(\cf6 "histoAnalyzerName"\cf4 , pairLabel+\cf6 "R"\cf4 );\
      configR.addParameter(\cf6 "histoBaseName"\cf4 ,     pairLabel+\cf6 "R"\cf4 );\
      task = new ParticlePairAnalyzer(pairLabel+\cf6 "R"\cf4 , configR,analysisEventFilters, analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      \}\
    \}\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runNuDynAnalysis)\
    \{\
    Configuration config(\cf6 "NuDyn Correlation Configuration"\cf4 );\
    config.addParameter(\cf6 "useEventStream0"\cf4 ,         YES);\
    config.addParameter(\cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    config.addParameter(\cf6 "runSubsampleAnalysis"\cf4 ,     runSubsampleAnalysis);\
    config.addParameter(\cf6 "doPartialSaves"\cf4 ,          doPartialSaves);\
    config.addParameter(\cf6 "scaleHistograms"\cf4 ,         scaleHistograms);\
    config.addParameter(\cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    config.addParameter(\cf6 "histoOutputFileName"\cf4 ,     outputFileNameBase+nuDynLabel);\
    config.addParameter(\cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    config.addParameter(\cf6 "histoAnalyzerName"\cf4 ,       nuDynLabel);\
    config.addParameter(\cf6 "histoBaseName"\cf4 ,           nuDynLabel);\
    config.addParameter(\cf6 "inputType"\cf4 ,               \cf9 1\cf4 );\
    config.addParameter(\cf6 "pairOnly"\cf4 ,                
\f1\b \cf7 true
\f0\b0 \cf4 );\
    config.addParameter(\cf6 "nBins_mult"\cf4 ,              \cf9 200\cf4 );\
    config.addParameter(\cf6 "min_mult"\cf4 ,                \cf9 0.0\cf4 );\
    config.addParameter(\cf6 "max_mult"\cf4 ,                \cf9 200.0\cf4 );\
\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runGenLevelAnalysis)\
      \{\
      task = new NuDynAnalyzer(nuDynLabel,config,analysisEventFilters,analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)     basicClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)   derivedClosureIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)    balFctClosureIterator->addSubTask(task);\
      \}\
    
\f1\b \cf7 if
\f0\b0 \cf4  (runRecoLevelAnalysis)\
      \{\
      Configuration configR(config);\
      configR.addParameter(\cf6 "useEventStream0"\cf4 ,     NO);\
      configR.addParameter(\cf6 "useEventStream1"\cf4 ,     YES);\
      configR.addParameter(\cf6 "histoAnalyzerName"\cf4 ,   nuDynLabel+\cf6 "R"\cf4 );\
      configR.addParameter(\cf6 "histoBaseName"\cf4 ,       nuDynLabel+\cf6 "R"\cf4 );\
      task = new NuDynAnalyzer(nuDynLabel+\cf6 "R"\cf4 ,configR,analysisEventFilters,analysisParticleFilters,selectedLevel);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)            eventAnalysis->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)   basicSubsampleIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)  derivedHistoIterator->addSubTask(task);\
      
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis) derivedSubsampleIterator->addSubTask(task);\
      \}\
    \}\
\
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
  std::cout << \cf6 "Configuration Completed - Run analysis"\cf4  << std::endl;\
  std::cout << \cf6 "=================================================================================="\cf4  << std::endl;\
  gSystem->mkdir(outputPathName,\cf9 1\cf4 );\
\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runEventAnalysis)             eventAnalysis->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runBasicSubsampleAnalysis)    basicSubsampleIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedHistoCalculation)   derivedHistoIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runDerivedSubsampleAnalysis)  derivedSubsampleIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runBalFctCalculation)\
    \{\
    vector<TString>  sObservableNames;\
    vector<TString>  pObservableNames;\
    
\f1\b \cf7 int
\f0\b0 \cf4  observableSelection = \cf9 4\cf4 ;\
    
\f1\b \cf7 switch
\f0\b0 \cf4  (observableSelection)\
      \{\
        
\f1\b \cf7 default
\f0\b0 \cf4 :\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 0\cf4 : \cf2 // eta based observables, full complement\cf4 \
        sObservableNames.push_back(\cf6 "n1_eta"\cf4 );\
        sObservableNames.push_back(\cf6 "n1_phi"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_ptpt"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_phiPhi"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_etaEta"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_DetaDphi_shft"\cf4 );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 1\cf4 : \cf2 // eta based observables, only DeltaEta vs DeltaPhi\cf4 \
        sObservableNames.push_back(\cf6 "n1_eta"\cf4 );\
        sObservableNames.push_back(\cf6 "n1_phi"\cf4 );\
        pObservableNames.push_back(\cf6 "rho2_DetaDphi_shft"\cf4 );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 2\cf4 : \cf2 // y based observables, full complement\cf4 \
        sObservableNames.push_back(\cf6 "n1_y"\cf4 );\
        sObservableNames.push_back(\cf6 "n1_phi"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_ptpt"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_phiPhi"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_yY"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_DyDphi_shft"\cf4 );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 3\cf4 : \cf2 // y based observables, only DeltaY vs DeltaPhi\cf4 \
        sObservableNames.push_back(\cf6 "n1_y"\cf4 );\
        sObservableNames.push_back(\cf6 "n1_phi"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_DyDphi_shft"\cf4 );\
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
\
        
\f1\b \cf7 case
\f0\b0 \cf4  \cf9 4\cf4 : \cf2 // eta based observables, only DeltaEta vs DeltaPhi\cf4 \
        sObservableNames.push_back(\cf6 "n1_eta"\cf4 );\
        sObservableNames.push_back(\cf6 "n1_phi"\cf4 );\
        pObservableNames.push_back(\cf6 "rho2_DetaDphi_shft"\cf4 );\
        pObservableNames.push_back(\cf6 "R2_DetaDphi_shft"\cf4 );\
        \cf2 //        pObservableNames.push_back("n2_etaEta");\cf4 \
        \cf2 //        pObservableNames.push_back("n2_ptPt");\cf4 \
        \cf2 //        pObservableNames.push_back("n2_phiPhi");\cf4 \
        
\f1\b \cf7 break
\f0\b0 \cf4 ;\
      \}\
    \cf2 //outputPathName = "/Volumes/ClaudeDisc4/OutputFiles/longTest/RhoDecay/";\cf4 \
    \cf2 //TString histoInputFileName = "RhoDecay_Pair_Derived.root";\cf4 \
    \cf2 //TString histoOutputFileName = "RhoDecay_Pair_BalFct.root";\cf4 \
    Configuration balFctCalcConfig(\cf6 "BalFctCalc Configuration"\cf4 );\
    balFctCalcConfig.addParameter( \cf6 "forceHistogramsRewrite"\cf4 ,  forceHistogramsRewrite);\
    balFctCalcConfig.addParameter( \cf6 "appendedString"\cf4 ,          balFctLabel);\
    balFctCalcConfig.addParameter( \cf6 "IncludedPattern0"\cf4 ,        histoModelDataName);\
    balFctCalcConfig.addParameter( \cf6 "IncludedPattern1"\cf4 ,        pairLabel);\
    balFctCalcConfig.addParameter( \cf6 "IncludedPattern2"\cf4 ,        derivedLabel);\
    balFctCalcConfig.addParameter( \cf6 "ExcludedPattern0"\cf4 ,        balFctLabel);\
    balFctCalcConfig.addParameter( \cf6 "histoInputPath"\cf4 ,          outputPathName);\
    balFctCalcConfig.addParameter( \cf6 "histoOutputPath"\cf4 ,         outputPathName);\
    balFctCalcConfig.addParameter( \cf6 "histoInputFileName"\cf4 ,      TString(\cf6 ""\cf4 ));\
    balFctCalcConfig.addParameter( \cf6 "histoOutputFileName"\cf4 ,     TString(\cf6 ""\cf4 ));\
    balFctCalcConfig.addParameter( \cf6 "histoModelDataName"\cf4 ,      histoModelDataName);\
    balFctCalcConfig.addParameter( \cf6 "histoAnalyzerName"\cf4 ,       pairLabel);\
    balFctHistoIterator = new BalanceFunctionCalculator(\cf6 "BalFctCalc"\cf4 ,\
                                                        balFctCalcConfig,\
                                                        analysisEventFilters,\
                                                        analysisParticleFilters,\
                                                        sObservableNames,\
                                                        pObservableNames,\
                                                        selectedLevel);\
    balFctHistoIterator->execute();\
    \cf2 //delete balFctHistoIterator;\cf4 \
    \}\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runBalFctSubsampleAnalysis) balFctSubsampleIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBasicClosureAnalysis)    basicClosureIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runDerivedClosureAnalysis)  derivedClosureIterator->execute();\
  
\f1\b \cf7 if
\f0\b0 \cf4  (runClosureAnalysis && runBalFctClosureAnalysis)   derivedClosureIterator->execute();\
\
  
\f1\b \cf7 return
\f0\b0 \cf4  \cf9 0\cf4 ;\
\}\
\
\
\
\
\cf2 /*\cf4 \
\cf2  To generate enhanced charm production -- received from Pet Christianssen. Jul 16-2021.\cf4 \
\cf2  // Initialize PYTHIA minbias Generator.\cf4 \
\cf2  Pythia8::Pythia pythia;\cf4 \
\cf2  pythia.readString("Beams:eCM = 5000."); // 5 TeV pp\cf4 \
\cf2  //  pythia.readString("Beams:eCM = 13000."); // 13 TeV pp\cf4 \
\cf2  pythia.readString("HardQCD:gg2ccbar = on");\cf4 \
\cf2  pythia.readString("HardQCD:qqbar2ccbar = on");\cf4 \
\
\cf2  // Prevent charm hadrons from decaying.\cf4 \
\cf2  pythia.readString("ParticleDecays:limitTau0 = on");\cf4 \
\cf2  pythia.readString("ParticleDecays:tau0Max = 0");\cf4 \
\
\cf2  pythia.init();\cf4 \
\
\
\cf2  I select the final state hadrons like this:\cf4 \
\cf2  // Final\cf4 \
\cf2  if (!pythia.event[i].isFinal())\cf4 \
\cf2  continue;\cf4 \
\
\cf2  // Hadron\cf4 \
\cf2  if(!pythia.event[i].isHadron())\cf4 \
\cf2  continue;\cf4 \
\
\cf2  // print out all charm hadrons\cf4 \
\cf2  const int pdg = TMath::Abs(pythia.event[i].id()%10000); // only 3 digits meson\cf4 \
\cf2  // or 4 digits baryon\cf4 \
\cf2  if(pdg < 1000) \{ // meson\cf4 \
\cf2  if(int(pdg/100) != 4)\cf4 \
\cf2  continue;\cf4 \
\cf2  \} else \{\cf4 \
\
\cf2  if(int(pdg/1000) != 4)\cf4 \
\cf2  continue;\cf4 \
\cf2  \}\cf4 \
\cf2  //pythia.readString("310:mayDecay = no");//K0s decay off\cf4 \
\cf2  //pythia.readString("ParticleDecays:limitTau0 = on");\cf4 \
\cf2  //pythia.readString("ParticleDecays:tau0Max = 10");\cf4 \
\cf2  //pythiaOptions.push_back( new TString("SoftQCD:all = on") );                   // Allow total sigma = elastic/SD/DD/ND\cf4 \
\
\cf2  // pythiaOptions.push_back(  new TString("HardQCD:all = on");\cf4 \
\cf2  */\cf4 \
\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadBase\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Base/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "Timer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "MessageLogger.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "Task.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "TaskIterator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "Collection.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "CanvasCollection.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "HistogramCollection.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "Histograms.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "Particle.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleType.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleTypeCollection.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleDecayMode.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "DerivedHistoIterator.hpp"\cf4 );\
  gSystem->Load(\cf6 "libBase.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPythia\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/CAPPythia/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "PythiaEventGenerator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "PythiaEventReader.hpp"\cf4 );\
  gSystem->Load(\cf6 "libCAPPythia.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPerformance\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Performance/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "ClosureCalculator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ClosureIterator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "MeasurementPerformanceSimulator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePerformanceSimulator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePerformanceAnalyzer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePerformanceHistos.hpp"\cf4 );\
  gSystem->Load(\cf6 "libPerformance.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadAmpt\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Ampt/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "AmptEventReader.hpp"\cf4 );\
  gSystem->Load(\cf6 "libAmpt.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadEpos\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Epos/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "EposEventReader.hpp"\cf4 );\
  gSystem->Load(\cf6 "libEpos.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadBasicGen\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/BasicGen/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "GaussianGeneratorTask.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "RadialBoostHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "RadialBoostTask.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "RapidityGenerator.hpp"\cf4 );\
  gSystem->Load(\cf6 "libBasicGen.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadGlobal\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Global/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "GlobalAnalyzer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "GlobalHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "TransverseSpherocityHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "TransverseSpherocityAnalyzer.hpp"\cf4 );\
  gSystem->Load(\cf6 "libBasicGen.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadParticle\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Particle/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "ParticleHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleDerivedHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleAnalyzer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticleDerivedHistogramCalculator.hpp"\cf4 );\
  gSystem->Load(\cf6 "libParticle.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadPair\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/Pair/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "ParticlePairAnalyzer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePairHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePairDerivedHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePairCombinedHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "ParticlePairDerivedHistogramCalculator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "BalanceFunctionCalculator.hpp"\cf4 );\
  gSystem->Load(\cf6 "libPair.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadNuDyn\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/NuDyn/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "NuDynAnalyzer.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "NuDynDerivedHistogramCalculator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "NuDynDerivedHistos.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "NuDynHistos.hpp"\cf4 );\
  gSystem->Load(\cf6 "libNuDyn.dylib"\cf4 );\
\}\
\

\f1\b \cf7 void
\f0\b0 \cf4  \cf8 loadSubSample\cf4 (
\f1\b \cf7 const
\f0\b0 \cf4  TString & includeBasePath)\
\{\
  TString includePath = includeBasePath + \cf6 "/SubSample/"\cf4 ;\
  gSystem->Load(includePath+\cf6 "SubSampleStatCalculator.hpp"\cf4 );\
  gSystem->Load(includePath+\cf6 "SubSampleStatIterator.hpp"\cf4 );\
  gSystem->Load(\cf6 "libSubSample.dylib"\cf4 );\
\}\
}